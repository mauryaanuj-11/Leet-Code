class Solution{
    static bool cmp(pair<int,int> a, pair<int,int> b){
        return a.second<b.second;
    }
    
public:
    vector<int> maxMeetings(int n,vector<int> &s,vector<int> &f){
        vector<pair<int,int>> vec;
        vector<int> ans;
        map<int,int> m;
        int endPoint=0;
        
        if(n==1)
        return {1};
        for(int i=0;i<n;i++){
            if(m.find(s[i])==m.end()){
                m.insert({s[i],i+1});
            }
        }
        
        for(int i=0;i<n;i++){
            pair<int,int> pr=make_pair(s[i],f[i]);
            vec.push_back(pr);
        }
        sort(vec.begin(), vec.end(),cmp);

        for(int i=0;i<n;i++){
            if(vec[i].first>endPoint){
                if(m.find(vec[i].first)!=m.end()){
                    ans.push_back(m[vec[i].first]);
                }
                endPoint=vec[i].second;
            }
        }
        sort(ans.begin(),ans.end());
        return ans;
    }
};
