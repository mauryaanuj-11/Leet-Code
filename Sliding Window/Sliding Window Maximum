class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
    int i=0,j=0;
    vector<int> ans;
    list<int> li;
    
    // For edge case, if it is needed.
    if(nums.size()<k){
        int maxi=*max_element(nums.begin(),nums.end());
        ans.push_back(maxi);
    }
    
    while(j<nums.size()){
        if(li.back()<nums[j]){
            while(li.size()>0 && li.back()<nums[j])
            li.pop_back();
        }
        li.push_back(nums[j]);
        if(j-i+1<k)
        j++;
        else if(j-i+1==k){
            ans.push_back(li.front());
            if(li.front()==nums[i])
            li.pop_front();
            i++;
            j++;
        }
    }
    return ans;
    }
};
