class Solution {
public:
    bool hasCycle(ListNode *head) {

        // Using iterative approach
        unordered_map<ListNode*,int> hashmap;
        while(head!=NULL){
            if(hashmap.find(head)!=hashmap.end())
            return true;
            else
            hashmap[head]++;
            head=head->next;
        }
        return false;
        
       // Using two pointer approach 
       
        // if(head==NULL)
        // return false;
        // ListNode* slow =head;
        // ListNode* fast=head;
        // while(fast->next!=NULL && fast->next->next!=NULL){
        //     fast=fast->next->next;
        //     slow=slow->next;
        //     if(fast==slow)
        //     return true;
        // }
        // return false;
    }
};
