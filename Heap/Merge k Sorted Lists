/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<pair<int,ListNode*>, vector<pair<int,ListNode*>>,
        greater<pair<int,ListNode*>>> pq;
        ListNode* dummy=new ListNode(-1);
        ListNode* temp=dummy;
        
        if(lists.size()==0)
        return NULL;
        
        for(int i=0;i<lists.size();i++){
            ListNode* temp=lists[i];
            while(temp!=NULL){
                pq.push({temp->val,temp});
                temp=temp->next;
            }
        }
        
        while(!(pq.empty())){
            //pair<int,ListNode*> pr=pq.top();
            temp->next=pq.top().second;
            temp=pq.top().second;
            pq.pop();
        }
        return dummy->next;
    }
};
