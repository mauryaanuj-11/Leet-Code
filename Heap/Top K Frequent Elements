class Solution {
public:
    vector<int> topKFrequent(vector<int>& arr, int k) {
    unordered_map<int,int> mp;
    priority_queue<pair<int,int>, vector<pair<int,int>> , greater<pair<int,int>>> minHeap;
    vector<int> ans;
    
    for(auto it : arr)
    mp[it]++;

    //You can Traverse it like this or the below method
    // for(auto it=mp.begin();it!=mp.end();it++){
    //     minHeap.push({it->second,it->first});
    //     if(minHeap.size()>k){
    //         minHeap.pop();
    //     }
    // }

    for(auto it : mp){
        minHeap.push({it.second,it.first});
        if(minHeap.size()>k){
            minHeap.pop();
        }
    }


    while(!(minHeap.empty())){
        ans.push_back(minHeap.top().second);
        minHeap.pop();
    }
    return ans;
    }
};
