class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> res;
        queue<pair<TreeNode* ,pair<int,int>>> q;
        map<int,map<int,multiset<int>>> m;
        if(root==NULL)
        return res;
        q.push({root,{0,0}});

        while(!q.empty()){
            auto temp=q.front();
            q.pop();
            TreeNode* Node=temp.first;
            int x=temp.second.first, y=temp.second.second;
            m[x][y].insert({Node->val});
            if(Node->left!=NULL){
                q.push({Node->left,{x-1,y+1}});
            }
            if(Node->right!=NULL){
                q.push({Node->right,{x+1,y+1}});
            }
        }
        for( auto it: m){
            vector<int> st;
            for(auto i : it.second){
                for(auto j : i.second)
                st.push_back(j);
            }
            res.push_back(st);
        }
        return res;
    }
};
